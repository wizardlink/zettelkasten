:PROPERTIES:
:ID:       a180a45c-44a0-4a92-add1-af3156b8b990
:END:
#+title: 68188 - Correct the errors generated by the new ESLint configuration
#+filetags: :work:cyncly:
* References
- [[id:5b7966be-2a68-48c3-b9d1-25864e6b3ce7][Mooble]]
- [[id:6df5e61f-2848-4bc6-93e1-52ff61e74500][67251 - Configure ESLint for Mooble]]

* Caveats
** ~ProjectCategoryModel.ts~
*** L:12
The ~model~ parameter of the constructor accepts ~any~ parameters and that spews an /ESLint/ error, which can be fixed by typing the parameter correctly, however, I am unsure what was the original intention with this class, so I'll leave it for later where I can better analyze it or ask for advice.
** ~EventManager.ts~
This file is not imported by anything in the project or outside of.

*** L:3
What is this ~<Event>.detail~ property? The ~eventBus~ object sounds generic, as well as the file name but the implementation is not. Would need to look into why the callback doesn't accepts ~CustomEvent~ typing for it's parameter, is it a limitation of the /TypeScript/ version we're using?
*** L:5
What is the ~data~ property? If it's meant to be a generic object we can just use ~Record<string, unknown>~.
** ~ItemCardCategory.tsx~
*** L:31
What is ~onClick~ actually expecting? If it's a placeholder, we can either remove this or just remove the requirement for a parameter and write as:
#+begin_src typescript
type ItemCardCategoryProps = {
    /* ... */
    onClick: (value?: any) => void
    // Ideadlly this  ^ should not be "any" either, instead, properly type it or use "unknown".
};

this._buttonStore = new ButtonStore({
    selected: false,
    onButtonClick: this.props.onClick
});
#+end_src
** ~TwInspireBase.tsx~
*** ~LoginStore~ and ~LoginStoreClient~ import the same thing
One is used as the typing for the parameter, while it also sets in the configuration the ~loginStatus~ property, by instantiating the class that the parameter is? This doesn't makes sense.
*** What is ~inspireClient~?
* General concerns
** DONE Babel's /TypeScript transpilation/
~tsserver~ errors are being completely ignored, from what I have fixed so far, it seems to be a 2:1 ratio of ~tsserver~ errors to ~ESLint~ errors; this is a major issue in my opinion.
